name: Build OpenWrt for CMCC XR30

on:
  workflow_dispatch:  # 手动触发
  push:
    tags:
      - 'v*'          # 标签推送触发 (例如 v1.0)

env:
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 360  # 6小时超时

    steps:
    - name: Checkout custom XR30 source
      uses: actions/checkout@v4
      with:
        repository: 123456sjj/xr30
        ref: master
        path: xr30

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex g++ gcc-multilib \
        gawk gettext git libncurses5-dev libssl-dev python3 python3-distutils \
        rsync unzip zlib1g-dev file wget

    - name: Setup feeds
      working-directory: ./xr30
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Apply custom configuration
      working-directory: ./xr30
      run: |
        # 自定义 XR30 配置（确保已修改 dts 文件）
        cat > $CONFIG_FILE << EOF
        CONFIG_TARGET_ramips=y
        CONFIG_TARGET_ramips_mt7621=y
        CONFIG_TARGET_ramips_mt7621_DEVICE_cmcc_xr30=y
        CONFIG_TARGET_ROOTFS_UBIFS=y        # 使用 UBIFS 文件系统
        CONFIG_TARGET_UBIFS_FREE_SPACE_FIXUP=y
        CONFIG_TARGET_UBIFS_JOURNAL_SIZE="512"
        CONFIG_TARGET_UBI_EB_SIZE=128      # 256MB NAND 配置
        CONFIG_TARGET_UBI_MINIO_SIZE=2048
        # 内存优化 (1GB RAM)
        CONFIG_KERNEL_SLAB=y
        # 256MB Flash 分区
        CONFIG_TARGET_KERNEL_PARTSIZE=32
        CONFIG_TARGET_ROOTFS_PARTSIZE=200
        # 默认包含的软件包
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_openssh-sftp-server=y
        CONFIG_PACKAGE_iperf3=y
        CONFIG_PACKAGE_tcpdump=y
        EOF

        # 应用配置
        make defconfig

    - name: Download packages
      working-directory: ./xr30
      run: make download -j$(nproc)

    - name: Build OpenWrt
      working-directory: ./xr30
      run: make -j$(($(nproc) - 1)) V=s   # 保留一个核心给系统

    - name: Prepare artifact
      run: 
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

    - name: Upload buildinfo
      uses: actions/upload-artifact@v4
      with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
          name: OpenWrt_package
          path: ./artifact/package/

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
